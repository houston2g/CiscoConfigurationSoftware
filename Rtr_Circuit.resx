<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pBox_rtr.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>